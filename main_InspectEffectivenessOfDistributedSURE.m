MM					= [100, 1000];
E					= 30;
% afPotentialGammas	= logspace(-3,2,20);
afPotentialGammas	= logspace(-15,5,21);
iNumberOfMCRuns		= 100;


for M = MM;
	%
	for iMCRun = 1:iNumberOfMCRuns;
		%
		fprintf('effectiveness SURE, M %d, \t MC run %d\n', M, iMCRun);
		%
		[ffTrueProcess, afTrueParameters] = GenerateTrueProcess( tKernelParameters );
		[ffInputLocations, iiInputLocationsIndexes, afMeasurements] = MeasureProcess( ffTrueProcess, M, tKernelParameters, atAgents );
		%
		gammaSURE	= EstimateGammaWithDistributedSURE(		...
							ffInputLocations,				...
							iiInputLocationsIndexes,		...
							afMeasurements,					...
							afPotentialGammas,				...
							E,								...
							tKernelParameters				);
		%
		gammaOracle	= EstimateGammaWithOracle(				...
							afTrueParameters,				...
							ffInputLocations,				...
							iiInputLocationsIndexes,		...
							afMeasurements,					...
							afPotentialGammas,				...
							E,								...
							tKernelParameters				);
		%
		[ ffEstimatedFASURE, afEstimatedCoefficientsFASURE ] = EstimateProcessA( iiInputLocationsIndexes, afMeasurements, gammaSURE, E, tKernelParameters );
		%
		[ ffEstimatedFAOracle, afEstimatedCoefficientsFAOracle ] = EstimateProcessA( iiInputLocationsIndexes, afMeasurements, gammaOracle, E, tKernelParameters );
		%
		afEstimatedCoefficientsFASURE(end+1:numel(afTrueParameters),1) = 0;
		afEstimatedCoefficientsFAOracle(end+1:numel(afTrueParameters),1) = 0;
		%
		afErrorNormsASURE(iMCRun)	= sum(((afEstimatedCoefficientsFASURE - afTrueParameters).^2));
		afErrorNormsAOracle(iMCRun) = sum(((afEstimatedCoefficientsFAOracle - afTrueParameters).^2));
		%
		fMSELossInPercent = ((afErrorNormsASURE(iMCRun) - afErrorNormsAOracle(iMCRun)) / afErrorNormsASURE(iMCRun)) * 100;
		%
		fprintf('SURE = %.15f \t oracle = %.15f \t MSE loss in %% = %.5f\n', gammaSURE, gammaOracle, fMSELossInPercent);
		%
	end;% MC 
	%
	MatlabToTikZ.ExportLineplot(						...
		sprintf('../../ArticleJournal/Data/EffectivenessOfDistributedSURE/BoxplotsFASURE_M%d_E%d.txt', M, E),	...
		[												...
			(1:iNumberOfMCRuns)',						...
			log(afErrorNormsASURE)',					...
		],												...
		[,												...
			{'MCrunIndex','logErrorNormsNormalASURE'},
		]);
	%
	MatlabToTikZ.ExportLineplot(						...
		sprintf('../../ArticleJournal/Data/EffectivenessOfDistributedSURE/BoxplotsFAOracle_M%d_E%d.txt', M, E),	...
		[												...
			(1:iNumberOfMCRuns)',						...
			log(afErrorNormsAOracle)',					...
		],												...
		[,												...
			{'MCrunIndex','logErrorNormsNormalAOracle'},
		]);
	%
end;% M

