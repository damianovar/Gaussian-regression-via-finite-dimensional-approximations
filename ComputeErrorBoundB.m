function boundB = ComputeErrorBoundB( alpha, epsilonB, M, E, k, sigma2, tKernelParameters )
	%
	% for readability
	lambdas = tKernelParameters.afEigenvalues;
	%
	kappa = ...
			( 1 - epsilonB )^2	...
		*	( epsilonB + sigma2 / (M * lambdas(1)) )^(-2)	...
		*	( 1 + sigma2 / (M * lambdas(1)) )^(-2);
	%
	%
	boundB =	...
		...
		... first term
			( k * M ) / (1 - alpha)	...
		*	( sum( (lambdas(1:E).^2) ./ ((M * lambdas(1:E) + sigma2).^2) ) )	...
		*	( sum( lambdas(E+1:end) ) ) ...
		...
		... second term
		+	sigma2 / (1 - alpha)	...
		*	( sum( (lambdas(1:E)) ./ ((epsilonB * M * lambdas(1:E) + sigma2)) ) )	...
		...
		... third term
		+	sum( lambdas(E+1:end) )	...
		...
		... fourth term
		+	( kappa ) / (1 - alpha)	...
		*	( E * sigma2 / M ) ...
		...
		... fifth term
		+	( kappa * (2 - epsilonB)^2 ) / (1 - alpha)	...
		*	sum( (lambdas(1:E)) );
	%
end %

